configs:
  mariadb_initdb:
    file: ./mariadb/docker-entrypoint-initdb.d
  pgadmin_config:
    file: ./pgadmin-servers.json
  postgresql_initdb:
    file: ./postgresql/docker-entrypoint-initdb.d
  grafana_provisioning:
    file: ./grafana/provisioning
  grafana_dashboards:
    file: ./grafana/dashboards

volumes:
  couchdb: {}
  grafana: {}
  mailpit: {}
  mariadb: {}
  mongodb: {}
  n8n: {}
  pgadmin: {}
  postgresql: {}
  redis: {}

services:

# MariaDB Server
# One of the most popular open source relational databases
# https://mariadb.org/
# DockerFile from 11.6-ubi
# https://github.com/MariaDB/mariadb-docker

  mariadb:
    container_name: r5a10-mariadb
    build:
      context: ./mariadb
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    restart: no
    configs:
      - source: mariadb_initdb
        target: /docker-entrypoint-initdb.d
    volumes:
      - mariadb:/var/lib/mysql
      - ./data:/data
    ports:
      - 3306:3306
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}

# PostgreSQL
# The world's most advanced open source relational database
# https://www.postgresql.org/
  postgresql:
    container_name:  r5a10-postgresql
    build:
      context: ./postgresql
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d ${DB_NAME}'"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: no
    configs:
      - source: postgresql_initdb
        target: /docker-entrypoint-initdb.d/
    volumes:
      - postgresql:/var/lib/postgresql/data
      - ./data:/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD}

# Directus
# The backend to build anything or everything.
# https://directus.io/

  directus:
    container_name: r5a10-directus
    image: directus/directus:${DIRECTUS_VERSION:-11.1.0}
    restart: no
    volumes:
      - ./directus/uploads:/directus/uploads
      - ./directus/extensions:/directus/extensions
    ports:
      - 3001:${DIRECTUS_PORT:-8081}
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      KEY: ${DIRECTUS_KEY}
      SECRET: ${DIRECTUS_SECRET}
      PUBLIC_URL: http://127.0.0.1:3001/
      PORT: ${DIRECTUS_PORT:-8081}

      DB_CLIENT: ${DIRECTUS_DB_CLIENT:-pg}
      DB_HOST: ${DIRECTUS_DB_HOST:-postgresql}
      DB_PORT: ${DIRECTUS_DB_PORT:-5432}
      DB_DATABASE: ${DB_NAME}
      DB_USER: postgres
      DB_PASSWORD: supermotdepasse

      CACHE_ENABLED: true
      CACHE_AUTO_PURGE: true
      CACHE_STORE: redis
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PASSWORD: ${DB_ROOT_PASSWORD}

      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}

      EMAIL_FROM: directus@univ-lorraine.fr
      EMAIL_TRANSPORT: smtp
      EMAIL_SMTP_HOST: ${SMTP_HOST:-mailpit}
      EMAIL_SMTP_PORT: ${SMTP_PORT:-1025}

# Metabase
# Business Intelligence, Dashboards, and Data Visualization
# https://www.metabase.com/

  metabase:
    container_name: r5a10-metabase
    image: metabase/metabase:latest
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      postgresql:
        condition: service_healthy
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - 3002:3000
    environment:
      MB_DB_TYPE: ${MB_DB_TYPE:-postgres}
      MB_DB_HOST: ${MB_DB_HOST:-postgresql}
      MB_DB_PORT: ${MB_DB_HOST:-5432}
      MB_DB_USER: ${MB_DB_USER:-metabase}
      MB_DB_PASS: ${DB_PASSWORD}
      MB_DB_DBNAME: ${MB_DB_DBNAME:-metabase}
      MB_SITE_LOCALE: fr
      MB_ADMIN_EMAIL: ${ADMIN_EMAIL}
      MB_ANON_TRACKING_ENABLED: false
      MB_CHECK_FOR_UPDATES: false
      MB_NO_SURVEYS: yes
      MB_START_OF_WEEK: monday
      MB_CUSTOM_FORMATTING: '{"type/Temporal":{"time_style":"HH:mm","date_style":"D MMMM, YYYY","date_abbreviate":true},"type/Currency":{"currency":"EUR"},"type/Number":{"number_separators":", "}}'
      MB_EMAIL_SMTP_HOST: mailpit
      MB_EMAIL_SMTP_PORT: 1025
      MB_EMAIL_FROM_ADDRESS: metabase@univ-lorraine.fr

# N8N
# Powerful Workflow Automation Software & Tools
# https://n8n.io/
  n8n:
    container_name: r5a10-n8n
    image: docker.n8n.io/n8nio/n8n
    depends_on:
      postgresql:
        condition: service_healthy
    volumes:
      - n8n:/home/node/.n8n
    ports:
      - 3003:5678
    environment:
      GENERIC_TIMEZONE: Europe/Paris
      TZ: Europe/Paris
      N8N_DEFAULT_LOCALE: fr
      SMTP_HOST: mailpit
      SMTP_PORT: 1025
      N8N_PERSONALIZATION_ENABLED: false
      N8N_DIAGNOSTICS_ENABLED: false

      DB_TYPE: ${DB_TYPE:-postgresdb}
      DB_POSTGRESDB_DATABASE: ${DB_TYPE:-n8n}
      DB_POSTGRESDB_HOST: ${DB_POSTGRESDB_HOST:-postgresql}
      DB_POSTGRESDB_PORT: ${DB_POSTGRESDB_PORT:-5432}
      DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER:-n8n}
      DB_POSTGRESDB_SCHEMA: ${DB_POSTGRESDB_SCHEMA:-public}
      DB_POSTGRESDB_PASSWORD: ${DB_PASSWORD}

# Grafana
# Open source analytics & monitoring solution for every database.
# https://grafana.com/
  grafana:
    container_name: r5a10-grafana
    image: grafana/grafana-oss:${GRAFANA_VERSION:-11.1.3}
    restart: no
    depends_on:
      postgresql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 100M
    configs:
      - source: grafana_provisioning
        target: /etc/grafana/provisioning
      - source: grafana_dashboards
        target: /etc/grafana/dashboards
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - 3004:3000
    environment:
      GF_SECURITY_ADMIN_EMAIL: ${ADMIN_EMAIL}
      GF_SECURITY_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      GF_USERS_DEFAULT_THEME: light
      GF_USERS_ALLOW_SIGN_UP: false
      GF_FEATURE_TOGGLES_ENABLE: traceQLStreaming metricsSummary lokiFormatQuery alertmanagerRemoteOnly

# pgAdmin

  pgadmin:
    container_name: r5a10-pgadmin
    image: dpage/pgadmin4:${PGADMIN_VERSION:-8.11}
    depends_on:
      postgresql:
        condition: service_healthy
    restart: no
    configs:
      - source: pgadmin_config
        target: /pgadmin4/servers.json
    volumes:
      - pgadmin:/var/lib/pgadmin/
    ports:
      - 3009:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_DISABLE_POSTFIX: true


# PostgREST
# Serve a fully RESTful API from any existing PostgreSQL database.
# It provides a cleaner, more standards-compliant, faster API than you are likely to write from scratch.
# https://docs.postgrest.org/en/v12/
  postgrest:
    container_name:  r5a10-postgrest
    image: postgrest/postgrest:${POSTGREST_VERSION:-v12.2.2}
    restart: no
    depends_on:
      postgresql:
        condition: service_healthy
    command: postgrest
    ports:
      - 3005:3000
    environment:
      PGRST_DB_URI: postgres://${POSTGREST_USER:-postgrest}:${DB_PASSWORD}@${POSTGREST_HOST:-postgresql}:${POSTGREST_DB_PORT:-5432}/${DB_NAME:-postgrest}
      PGRST_DB_SCHEMAS: ${POSTGREST_DB_SCHEMAS:-public}
      PGRST_DB_ANON_ROLE: ${POSTGREST_DB_ANON_ROLE:-postgrest}
      PGRST_JWT_SECRET: ${POSTGREST_JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: ${POSTGREST_DB_USE_LEGACY_GUCS:-false}
      PGRST_APP_SETTINGS_JWT_SECRET: ${POSTGREST_APP_SETTINGS_JWT_SECRET}
      PGRST_APP_SETTINGS_JWT_EXP: ${POSTGREST_APP_SETTINGS_JWT_EXP}

# redocly

  redocly:
    container_name: redocly
    image: redocly/redoc
    depends_on:
      - postgrest
    ports:
      - 3008:80
    environment:
      SPEC_URL: http://127.0.0.1:3005

# PostGraphile
# Instant GraphQL API
# https://www.graphile.org/postgraphile/

  postgraphile:
    container_name: r5a10-postgraphile
    build:
      context: ./postgraphile
    restart: no
    depends_on:
      postgresql:
        condition: service_healthy
    command:
      [
        "--port", "${POSTGRAPHILE_PORT:-5000}",
        "--schema", "${POSTGRAPHILE_SCHEMA:-public}",
        "--enhance-graphiql",
        "--cors",
        "--allow-explain",
        "--dynamic-json",
        "--append-plugins",
        "postgraphile-plugin-connection-filter,postgraphile-plugin-fulltext-filter,@graphile/postgis,postgraphile-plugin-connection-filter-postgis"
      ]
    ports:
      - 3006:5000
    environment:
      - PGHOST=${POSTGRAPHILE_HOST:-postgresql}
      - PGPORT=${POSTGRAPHILE_DB_PORT:-5432}
      - PGUSER=${POSTGRAPHILE_DB_USER:-postgraphile}
      - PGPASSWORD=${DB_PASSWORD}
      - PGDATABASE=${DB_NAME:-northwind}

# Oriented Documents

# CouchDB
# Seamless multi-master sync, that scales from Big Data to Mobile.
# HTTP/JSON API.
# https://couchdb.apache.org/

  couchdb:
    container_name: couchdb-r5a10
    image: couchdb:${COUCH_DB_VERSION:-3.3}
    environment:
      COUCHDB_PASSWORD: ${DB_ROOT_PASSWORD}
      COUCHDB_USER: ${COUCHDB_USER:-admin}
    volumes:
      - couchdb:/opt/couchdb/data
    ports:
      - 3007:5984

# MongoDB
  mongodb:
    container_name: mongodb-r5a10
    image: mongo:${MONGODB_VERSION:-7.0.7-jammy}
    volumes:
      - ./data/configdb:/data/configdb
      - mongodb:/data/db
    ports:
      - ${MONGODB_PORT:-27017}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}

# Redis
# In-memory key-value database
# https://redis.io/fr/

  redis:
    container_name: r5a10-redis
    image: redis:${REDIS_VERSION:-7.2.5}
    restart: no
    command:
      - 'redis-server'
      - '--save 60 1'
      - '--loglevel warning'
      - '--requirepass ${DB_ROOT_PASSWORD}'
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${DB_ROOT_PASSWORD}", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    volumes:
      - redis:/data

# Mailpit
# email & SMTP testing tool with API for developers
# https://mailpit.axllent.org/
  mailpit:
    container_name: r5a10-mailpit
    image: axllent/mailpit:${MAILPIT_VERSION:-v1.20}
    restart: no
    ports:
      - 3010:8025
      - 1025:1025 # SMTP
    volumes:
      - mailpit:/data
    environment:
      TZ: Europe/Paris
